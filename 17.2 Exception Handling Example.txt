
/* 
	Exception Handling :-
	_________________________________
	
	2. Allow exception to propogate, and to be handled somewhere else.
		- throws is used to handle the exception somewhere else.
		- throws is used with method name just after the signature of any method.

	like .:
	
	In the below example, if user enters any number < 10, then, exception defined 
	try-catch will execute,
	But but, if the user enters a char instead of integer, then, throws defined with
	main will handle that exception somewhere else.

*/

package PracticeFiles ;

import java.util.Scanner;

public class ExceptionHandlings{
	
	public static Scanner scan = new Scanner(System.in) ;
	
	public static int checkingInput() throws Exception {
		int numb = 0;
		//	suppose, we want the user to enter any number > 10.
			System.out.print("Enter a number ") ;
			numb = scan.nextInt() ;
			if(numb < 10) {
				throw new Exception("You are entering number less than 10.");
			}
			
			return numb ;
		
	}
	
	
	
	public static void main(String [] args) {
		int numb  = 0 ;
		try {
			numb = checkingInput();		
		}
		
		catch(Exception e) {
			//	to get all the details of the exception : 
			System.out.println("The exception is " + e);
			System.out.println("Message is : " + e.getMessage()) ;
			System.out.println("Cause is : " + e.getCause());
			System.out.print("Stack Trace is : ");
			e.getStackTrace() ;
			System.out.println("Suppressed is : " + e.getSuppressed()) ;
			System.out.println("to string is : " + e.toString()) ;
		}
		
		finally {
			System.out.println("The input given by user is : " + numb);
		}
	}
}